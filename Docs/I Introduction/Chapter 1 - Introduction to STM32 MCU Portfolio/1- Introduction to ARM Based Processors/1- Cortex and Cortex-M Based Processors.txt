1. Cortex and Cortex-M Based Processors:
    * ARM Cortex is a wide set of 32 / 64-bit architectures and cores that are popular in the embedded world.
    * There are 3 main subfamilies of Cortex microcontrollers:
        - Cortex-A: (Application) => designed for devices undertaking complex computing tasks (hosting OS platforms, mobile devices, ...).
        - Cortex-M: (eMbedded)    => designed and optimized for low-cost embedded systems market (IoT, automation, connectivity, ...).
        - Cortex-R: (Real-time)   => designed for embedded systems where reliability, high availability, fault tolerance and real-time response are essential.

2. Cortex-M Processors Features:
    * Cortex-M Core Registers:
        => View image:
            + "Images/Figure 1.2 - ARM Cortex-M core registers.png"

    * Memory Map:
        . ARM defines a standardized memory address space common to all Cortex-M cores.
        . The address space is organized in several sub-regions with different functionalities:
            - Code Area       : 0x00000000 -> 0x1FFFFFFF : 0.5 GB
            - Internal SRAM   : 0x20000000 -> 0x3FFFFFFF : 0.5 GB
            - Peripheral      : 0x40000000 -> 0x5FFFFFFF : 0.5 GB
            - External RAM    : 0x60000000 -> 0x9FFFFFFF :   1 GB
            - External Device : 0xA0000000 -> 0xDFFFFFFF :   1 GB
            - PPB             : 0xE0000000 -> 0xE00FFFFF :   - --
            - Vendor Specific : 0xE0100000 -> 0xEFFFFFFF :   - --

        => View images:
            + "Images/Figure 1.3 - Cortex-M fixed memory address space.png"
            + "Images/Figure 1.4 - Memory layout of Code Area on STM32 MCUs.png"

    * Code Area Regions:
        . The "System memory" region is reserved to bootloaders, 0x1FFFX000 -> ...
        . Each STM32 family provides a bootloader pre-programmed into the chip during production.
        . Bootloaders are used to load code from several peripherals into the RAM.

        . The "Option bytes" region contains a series of bit flags that are used to configure several aspects of the MCU.

        . The "Flash" region is the internal MCU flash memory and where the program code resides, 0x08000000 -> ...

    * Bit Banding:
        . Bit masking is a technique to work with the individual bits in a word.
        . Bit masking is used to save space in memory or to deal with internal MCU registers and peripherals.
        . Bit masking requires multiple instructions to complete an operation. This leads to two types of problems:
            - Waste of CPU cycles
            - Dealing with concurrent execution, memory content may change before completing the bit mask operation

        . Bit-banding is a feature that enables every single bit in the bit-band region to be directly accessible (r/w/m without a sequence of instructions).
        . Bit-band alias is a region in memory that stores the addresses of each bit in the bit-band region.

        => bit_band_address = alias_region_base + (region_base_offset * 32) + (bit_number * 4):
            > alias_region_base  --> the base address of the bit-band alias region
            > region_base_offset --> the offset of the target word address relative to the start of the memory region base
            > bit_number         --> the specific bit number

        => The multipliers x32 and x4 ensure each bit in the memory region is uniquely mapped to its own 32-bit address in the alias region.

        => Example (in SRAM region):
            > bit_band_address_for_bit_0 = 0x22000000 + (0 * 32) + (0 * 4) = 0x22000000
